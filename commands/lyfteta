#!/usr/bin/env okshell

var loc = location();

// http://fiddle.jshell.net/4mHW9/52/light/
String.prototype.padRight = function(l,c) {return this+Array(l-this.length+1).join(c||" ")}

function staticMap(start, dest) {
  var markers = [];
  markers.push("pin-m-marker+CCC(" + start.longitude + "," + start.latitude + ")");
  markers.push("pin-m-marker+CCC(" + dest.longitude + "," + dest.latitude + ")");

  return "https://api.mapbox.com/v4/mapbox.dark/" + markers.join(",") + "/auto/300x300.png";
};

var destQuery = arguments.join("+");

var possibleDestinations = query("https://api.mapbox.com/geocoding/v5/mapbox.places/${destQuery}.json?proximity=${loc.latitude},${loc.longitude}");

destination = possibleDestinations.features[0].center;

var dest = {
  "latitude": destination[1],
  "longitude": destination[0]
};

show(staticMap(loc, dest));

var times = query("https://api.lyft.com/v1/eta?lat=${loc.latitude}&lng=${loc.longitude}");
var cost = query("https://api.lyft.com/v1/cost?start_lat=${loc.latitude}&start_lng=${loc.longitude}&end_lat=${dest.latitude}&end_lng=${dest.longitude}");

cost.cost_estimates.forEach(function(estimate) {
  var eta = "N/A";

  times.eta_estimates.forEach(function(estimated_time) {
    if (estimated_time.ride_type === estimate.ride_type) {
      eta = (estimated_time.eta_seconds / 60) + " min";
    }
  });

  var minCost = "$" + (estimate.estimated_cost_cents_min / 100.0);
  var maxCost = "$" + (estimate.estimated_cost_cents_max / 100.0);
  print(estimate.display_name.padRight(15) + "\t" + (minCost + " - " + maxCost).padRight(15) + "\t" + eta + "\t" + estimate.primetime_percentage);
});
